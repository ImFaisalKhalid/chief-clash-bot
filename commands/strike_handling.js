/**
 *  Contains all the functions related to handling strike information. The strike system is intiated via input from
 *  the Discord client (done in messages.js) and then acted upon by modifying the user_strikes_data.json file we have
 *  stored. 
 * 
 *  Relevant functions:
 *      @add_strike()
 *      @remove_strike()
 *      @list_strikes()
 *  
 *  File for bot verion: 1.0
 */

// Permissions/access to other modules and libraries
const fs = require('fs');
var display = require('./display');
const Discord = require('discord.js');

/*
  Gets access to our JSON strike data and adds a strike to a user when specified

  Parameters: 
       @client: The Discord user giving the bot command
  
  Relevant files: user_strikes_data.json
*/
function add_strike(client, name, reason) {

    // Makes an easy to parse JSON object using our strike file
    // var strike_data = require('../user_strikes_data.json');
    var json_data = fs.readFileSync('user_strikes_data.json');
    var strike_data = JSON.parse(json_data);

    const channel = client.channels.cache.get('717213839267201061');

    // Get a list of the names
    var usernames = []
    var rel_username = ""
    for (key in strike_data) {
      // usernames.push(strike_data[key].name);
      if (strike_data[key].id == name) {
        rel_username = strike_data[key].name;

        if (strike_data[key].num_strikes === 3) {

          // Embed to show strikes
          const exampleEmbed = new Discord.MessageEmbed() 
          .setColor('#9d03fc')
          .setAuthor(rel_username + ' has already has maximum strikes! ', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png')
          .addFields(
              { name: 'Strike 1', value: strike_data[key].reasons[0].reason_1 },
              { name: 'Strike 2', value: strike_data[key].reasons[0].reason_2 }, 
              { name: 'Strike 3', value: strike_data[key].reasons[0].reason_3 }
              
          )
          .setTimestamp()
          .setFooter('Generated by Chief Bot Alpha', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png');

          channel.send(exampleEmbed);

          break;
        }

        // Updates the number of strikes
        strike_data[key].num_strikes++;

        if (!strike_data[key].reasons[0].reason_1) {
          channel.send("This person has no reason 1");
          strike_data[key].reasons[0].reason_1 = reason;

          // Embed to show strikes
          const exampleEmbed = new Discord.MessageEmbed() 
          .setColor('#9d03fc')
          .setAuthor(rel_username + ' has a strike for: ', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png')
          .addFields(
              { name: 'Strike 1', value: strike_data[key].reasons[0].reason_1 }
          )
          .setTimestamp()
          .setFooter('Generated by Chief Bot Alpha', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png');

          channel.send(exampleEmbed);
        }
        else if (!strike_data[key].reasons[0].reason_2) {
          channel.send("This person has no reason 2");
          strike_data[key].reasons[0].reason_2 = reason;

          // Embed to show strikes
          const exampleEmbed = new Discord.MessageEmbed() 
          .setColor('#9d03fc')
          .setAuthor(rel_username + ' has strikes for: ', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png')
          .addFields(
              { name: 'Strike 1', value: strike_data[key].reasons[0].reason_1 },
              { name: 'Strike 2', value: strike_data[key].reasons[0].reason_2 }
          )
          .setTimestamp()
          .setFooter('Generated by Chief Bot Alpha', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png');

          channel.send(exampleEmbed);
        }
        else if (!strike_data[key].reasons[0].reason_3) {
          channel.send("This person has no reason 3");
          strike_data[key].reasons[0].reason_3 = reason;

          // Embed to show strikes
          const exampleEmbed = new Discord.MessageEmbed() 
          .setColor('#9d03fc')
          .setAuthor(rel_username + ' has strikes for: ', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png')
          .addFields(
              { name: 'Strike 1', value: strike_data[key].reasons[0].reason_1 },
              { name: 'Strike 2', value: strike_data[key].reasons[0].reason_2 }, 
              { name: 'Strike 3', value: strike_data[key].reasons[0].reason_3 }
              
          )
          .setTimestamp()
          .setFooter('Generated by Chief Bot Alpha', 'https://api-assets.clashofclans.com/badges/512/xXro3-How4UeBogChbE8uiFRM8iCM1jAQEKbGKKGhmU.png');

          channel.send(exampleEmbed);
        }

        // Write back into the file
        var updated_data = JSON.stringify(strike_data);
        fs.writeFile('user_strikes_data.json', updated_data, (err) => {
            if (err) throw err;
            console.log('Data written to file');
        });

        break;
      }
    }
    if (rel_username == "") {
      channel.send("User ID not found ");
    }
}

/*
  Gets access to our JSON strike data and removes a strike to a specified user. The file is then updated and saved
  back into the same file.

  Parameters: 
       @client: The Discord user giving the bot command
  
  Relevant files: user_strikes_data.json
*/
function remove_strike(client, name) {

  // // Makes an easy to parse JSON object using our strike file
  // var strike_data = require('../user_strikes_data.json');

  // const channel = client.channels.cache.get('695062761339879457');

  // if (num > 3) {
  //   channel.send("Invalid strike number")
  // }

  // // Get a list of the names
  // var usernames = []
  // for (key in strike_data) {
  //   usernames.push(strike_data[key].name);

  //   if (strike_data[key].id == name) {

  //     if (num === 1) 

  //   }
  // }
    
}

/*
  The functions that are exported from this module (meaning they can be used in other files as well)
*/
module.exports = {
    add_strike : add_strike,
    remove_strike : remove_strike,
};